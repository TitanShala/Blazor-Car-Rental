@page "/RentalCreate/{Id}"

@using Blazor_Car_Rental.Data.Models
@using Blazor_Car_Rental.Data.Services
@using Blazor_Car_Rental.Areas.Administrator.Services
@using Blazor_Car_Rental.Areas.Identity.Models
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject RentalServices RentalService
@inject AdmCarServices CarServices 
@inject NavigationManager nav



<h3>RentalCreate, Username= @username</h3>
<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Make" class="control-label">Make</label>
                <input type="date" form="Make" class="form-control" @bind="rental.ReceiptDate" />
            </div>
            <div class="form-group">
                <label for="Model" class="control-label">Model</label>
                <input type="date" form="Model" class="form-control" @bind="rental.ReturnDate" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateNewRental" value="Save" />
                <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>
@code {

    [Parameter]
    public string Id { get; set; }

    public int CarId ;
    Rental rental = new Rental();
    User user = new User();
    string username = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        CarId = (Convert.ToInt32(Id));

        username = authState.User.Identity.Name;
        //var user1 = authState.User;
        //var userid =  $"User Id: {user1.FindFirst(c => c.Type == "sub")?.Value}";


    }

    private async void CreateNewRental()
    {
        RentalService.CreateCarAsync(rental, CarId, username);
    }
    private async void Cancel()
    {

    }
}
